name: Deploy to Main

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: write
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Run linting (if available)
        run: |
          if command -v ruff &> /dev/null; then
            ruff check .
          elif command -v flake8 &> /dev/null; then
            flake8 .
          else
            echo "No linter found, skipping..."
          fi
        continue-on-error: true
        
      - name: Run tests (if available)
        run: |
          if [ -f pytest.ini ] || [ -f pyproject.toml ] || find . -name "test_*.py" | grep -q .; then
            python -m pytest
          else
            echo "No tests found, skipping..."
          fi
        continue-on-error: true
        
      - name: Test Streamlit app
        run: |
          python -c "import streamlit; import app; print('App imports successfully')"
        continue-on-error: true

  approval:
    name: Wait for Manual Approval
    runs-on: ubuntu-latest
    needs: test
    environment: production
    
    steps:
      - name: Manual approval checkpoint
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Tests passed! Waiting for manual approval to merge to main..."
            echo "PR: ${{ github.event.pull_request.number }}"
            echo "Branch: ${{ github.head_ref }}"
          else
            echo "Tests passed! Code was pushed directly to main."
            echo "Branch: ${{ github.ref_name }}"
          fi
          echo "Commit: ${{ github.sha }}"

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [test, approval]
    if: success()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
          
      - name: Deploy action
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "âœ… Approved! Merging PR #${{ github.event.pull_request.number }} to main"
            gh pr merge ${{ github.event.pull_request.number }} --merge --delete-branch
          else
            echo "âœ… Approved! Deploying code that was pushed to main"
            echo "ðŸš€ Running deployment steps..."
            # Add your deployment commands here
            echo "âœ… Deployment completed!"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}